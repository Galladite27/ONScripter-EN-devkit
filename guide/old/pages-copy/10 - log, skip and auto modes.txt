= Galladite's ONScripter-EN guide, part 10: log, skip and auto modes =
== Log mode ==
Log mode is enabled by default and can be accessed with the right and left arrow keys of by scrolling up and down.
As always, first here are the settings:

$maxkaisoupage - definition block only - set the maximum number of pages to be stored by log mode
$maxkaisoupage NUM
$maxkaisoupage number-of-pages

$lookbackbutton - definition block only - load button images for use in log mode
$lookbackbutton STR,STR,STR,STR
$lookbackbutton page-up-active,page-up-inactive,page-down-active,page-down-inactive

For lookbackbutton, each string should be a filename. By default these are "uoncur.bmp","uoffcur.bmp","doncur.bmp","doffcur.bmp" . These images MUST be the same size or the command will fail. Log mode buttons cannot be animated. The buttons' positions cannot be changed once set.

$lookbackcolor - definition block only - set the text colour for log mode
$lookbackcolor COLOR
$lookbackcolor colour

$lookbackvoice - definition block only - designate a wav file to play back when the pagedown/pageup button is clicked in log mode.
$lookbackvoice STR
$lookbackvoice filename

$lookbacksp - definition block only - use the given sprites as lookback buttons instead of the default images
$lookbacksp NUM,NUM
$lookbacksp sprite_id_1,sprite_id_2

Since log mode's functionality is built into ONScripter-EN, there isn't much in terms of program block commands. Howeber, you can forcefully flush the log mode buffer (i.e. remove all saved text history) using the program-block-only command "lookbackflush".

== Skip mode ==
Skip mode is again built in and is triggered using control. However, there are a few related commands.

$kidokuskip - definition block only - enable the use of "skip to next choice" mode to be toggled with kidokumode
$kidokuskip
$kidokuskip

$kidokumode - program block only - toggle between regular skip (stops at unread text) and "skip to next choice" mode (stops at the next choice)
$kidokumode NUM
$kidokumode 0_or_1

$mode_wave_demo - definition block only - this makes it so that wav files are played during "skip to next chioce" mode when normally they aren't
$mode_wave_demo
$mode_wave_demo

$skipoff - program block only - forcefully exit skip mode
$skipoff
$skipoff

There is no skipon command, but you can use "systemcall skip". If you wanted to, you could use defsub to create a "skipon" command.

== Auto mode ==
Auto mode is similar to the other modes; it's functionality is pre-defined but it has a couple of settings.

$automode - definition block only - enables the use of auto mode (although I don't think you actually need this line for it to be enabled using the "a" key)
$automode
$automode

$automode_time - definition block only - sets the delay at the end of a line in milliseconds
$automode_time NUM
$automode_time time_in_ms
